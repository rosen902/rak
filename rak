#!/usr/bin/env python3
import typer
import subprocess
import os
from rich.console import Console
from pathlib import Path
from generators import ProtoGenerator
from logger import Logger

DATABASES_DIR = Path("databases")
MODELS_DIR = Path("templates")
MICROSERVICES_DIR = Path("microservices")

app = typer.Typer()
gen_app = typer.Typer()
create_app = typer.Typer()
app.add_typer(gen_app, name="gen")
app.add_typer(gen_app, name="create")

logger = Logger()

@app.command("init")
def init_rak_env():
    DATABASES_DIR.mkdir(exist_ok=True)
    MODELS_DIR.mkdir(exist_ok=True)
    MICROSERVICES_DIR.mkdir(exist_ok=True)


@gen_app.command("server")
def generate_server(service: Path = typer.Argument(..., help="Name of the microservice server to generate.")):
    
    if not MODELS_DIR.exists():
        logger.panic(f"\"{MODELS_DIR.name}\" directory not found")

    logger.info("Start generating models..")
    proto_gen = ProtoGenerator(MODELS_DIR)
    proto_gen.load_models()
    

if __name__ == "__main__":
    app()